simple fast implementation

want to look up by position and by id

spatial index AND id index
two parallel indexes, keep them in sync
handle/reference stability guarantees?
    what inserts/moves will invalidate handles?

octree  items   your data
node_id item_id your_id

item_id -> node_id
this should be re-indexed
when a node is changed, we should update the node_ids of the 
for simplicity we don't want to be an intrusive container
so keep a separate indirection list of items

struct node {
    node_id child_node_id;
    item_id item_id;
};
std::vector<node> nodes;
struct item {
    node_id node_id;
    your_id your_id;
};
std::vector<item> items;


std::vector<data> data;
