Entities Morton sorted spatial index
Unordered map with user ID -> index in spatial map
Sort operation needs to be careful and update both

entities morton sorted in a vector
binary search to find by position
cache the binary search queries in a stack

support both
    fixed minimum node size
    fixed maximum node size

support items being in multiple nodes
    areas, not just points

use std::deque rather than vector for being able to insert and remove quickly in the middle
    would have to be very careful with ids
    it's ~20% slower for insertions only

avoid fragmentation in the vectors

different storage for leaf nodes and internal nodes
    they store different things

1m inserts in 0.88s
updates could be much faster

benchmark against other kdtrees, rtrees, octrees
